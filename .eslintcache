[{"/home/jitender/Desktop/react-eshakti/eshakti/src/index.js":"1","/home/jitender/Desktop/react-eshakti/eshakti/src/App.js":"2","/home/jitender/Desktop/react-eshakti/eshakti/src/context/action.types.js":"3","/home/jitender/Desktop/react-eshakti/eshakti/src/pages/Home.component.js":"4","/home/jitender/Desktop/react-eshakti/eshakti/src/components/footer/Footer.component.js":"5","/home/jitender/Desktop/react-eshakti/eshakti/src/components/bottom-bar/BottomBar.component.js":"6","/home/jitender/Desktop/react-eshakti/eshakti/src/components/return-and-cancellations/ReturnAndCancellations.component.js":"7","/home/jitender/Desktop/react-eshakti/eshakti/src/components/privacyPolicy/PrivacyAndPolicy.component.js":"8","/home/jitender/Desktop/react-eshakti/eshakti/src/components/shipping-and-payment-page/ShippingAndPayment.component.js":"9","/home/jitender/Desktop/react-eshakti/eshakti/src/components/how-it-works-page/HowItWorks.component.js":"10","/home/jitender/Desktop/react-eshakti/eshakti/src/components/whishlist/Wishlist.component.js":"11","/home/jitender/Desktop/react-eshakti/eshakti/src/components/search-page/Search.component.js":"12","/home/jitender/Desktop/react-eshakti/eshakti/src/components/myAccount-page/MyAccountRoutes.js":"13","/home/jitender/Desktop/react-eshakti/eshakti/src/store/home/homeReducer.js":"14","/home/jitender/Desktop/react-eshakti/eshakti/src/components/mid-banner/MidBanner.component.js":"15","/home/jitender/Desktop/react-eshakti/eshakti/src/components/ourQualities/OurQualities.component.js":"16","/home/jitender/Desktop/react-eshakti/eshakti/src/components/search-popup/SearchPopup.component.js":"17","/home/jitender/Desktop/react-eshakti/eshakti/src/components/brand-filter/BrandFilter.component.js":"18","/home/jitender/Desktop/react-eshakti/eshakti/src/components/sizeFilter/SizeFilter.component.js":"19","/home/jitender/Desktop/react-eshakti/eshakti/src/components/news-card/NewsCard.component.js":"20","/home/jitender/Desktop/react-eshakti/eshakti/src/components/order-details-page/OrderDetailsPage.component.js":"21","/home/jitender/Desktop/react-eshakti/eshakti/src/components/shipping-info-page/BillingAddress.js":"22","/home/jitender/Desktop/react-eshakti/eshakti/src/components/orderhistory/OrderHistoryList.component.js":"23","/home/jitender/Desktop/react-eshakti/eshakti/src/components/login/Login.component.js":"24","/home/jitender/Desktop/react-eshakti/eshakti/src/components/feedback-form/FeedbackForm.component.js":"25","/home/jitender/Desktop/react-eshakti/eshakti/src/components/ratingstars/RatingStars.component.js":"26","/home/jitender/Desktop/react-eshakti/eshakti/src/components/wholesale-page/WholeSale.component.js":"27","/home/jitender/Desktop/react-eshakti/eshakti/src/store/types.js":"28","/home/jitender/Desktop/react-eshakti/eshakti/src/store/store.js":"29","/home/jitender/Desktop/react-eshakti/eshakti/src/store/home/homeAction.js":"30","/home/jitender/Desktop/react-eshakti/eshakti/src/context/reducers/appReducer.js":"31","/home/jitender/Desktop/react-eshakti/eshakti/src/components/topNavbar/TopNav.component.js":"32","/home/jitender/Desktop/react-eshakti/eshakti/src/components/shipping-info-page/ShippingInfoPage.component.js":"33","/home/jitender/Desktop/react-eshakti/eshakti/src/components/eshakti-sizes/EshaktiSizes.component.js":"34","/home/jitender/Desktop/react-eshakti/eshakti/src/components/about-us/AboutUs.component.js":"35","/home/jitender/Desktop/react-eshakti/eshakti/src/components/customer-speak-page/CustomerSpeakPage.component.js":"36","/home/jitender/Desktop/react-eshakti/eshakti/src/axios/requests.js":"37","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productCard/ProductCard.component.js":"38","/home/jitender/Desktop/react-eshakti/eshakti/src/components/signup/SignUp.js":"39","/home/jitender/Desktop/react-eshakti/eshakti/src/components/user-profile/UserProfile.component.js":"40","/home/jitender/Desktop/react-eshakti/eshakti/src/components/cart-product-card/CartProductCard.component.js":"41","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productCustomization/ProductCustomization.js":"42","/home/jitender/Desktop/react-eshakti/eshakti/src/store/rootReducer.js":"43","/home/jitender/Desktop/react-eshakti/eshakti/src/components/customer-review-card/CustomerReviewCard.component.js":"44","/home/jitender/Desktop/react-eshakti/eshakti/src/context/context.js":"45","/home/jitender/Desktop/react-eshakti/eshakti/src/components/navBar/Navbar.component.js":"46","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productDetails/ProductDetails.js":"47","/home/jitender/Desktop/react-eshakti/eshakti/src/components/media-speaks-page/MediaSpeaks.component.js":"48","/home/jitender/Desktop/react-eshakti/eshakti/src/components/how-to-measure-page/HowToMeasure.component.js":"49","/home/jitender/Desktop/react-eshakti/eshakti/src/axios/axios.js":"50","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productListing/ProductListing.component.js":"51","/home/jitender/Desktop/react-eshakti/eshakti/src/hooks/useWindowSize.js":"52","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productTabList/ProductTabList.js":"53","/home/jitender/Desktop/react-eshakti/eshakti/src/components/defaultFilter/DefaultFilter.component.js":"54","/home/jitender/Desktop/react-eshakti/eshakti/src/components/category-page/CategoryPage.component.js":"55","/home/jitender/Desktop/react-eshakti/eshakti/src/components/colorFilter/ColorFilter.component.js":"56","/home/jitender/Desktop/react-eshakti/eshakti/src/components/size-chart-popup/SizeChartPopup.component.js":"57","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productCustomization/ImagesCustomization.js":"58","/home/jitender/Desktop/react-eshakti/eshakti/src/components/manage-address/ManageAddress.component.js":"59"},{"size":573,"mtime":1612154376845,"results":"60","hashOfConfig":"61"},{"size":5098,"mtime":1614572220512,"results":"62","hashOfConfig":"61"},{"size":102,"mtime":1612154376845,"results":"63","hashOfConfig":"61"},{"size":2001,"mtime":1613715770034,"results":"64","hashOfConfig":"61"},{"size":4527,"mtime":1614593179059,"results":"65","hashOfConfig":"61"},{"size":555,"mtime":1611571970218,"results":"66","hashOfConfig":"61"},{"size":1439,"mtime":1613625910630,"results":"67","hashOfConfig":"61"},{"size":1318,"mtime":1613625910622,"results":"68","hashOfConfig":"61"},{"size":1439,"mtime":1613625910630,"results":"69","hashOfConfig":"61"},{"size":1398,"mtime":1613715727901,"results":"70","hashOfConfig":"61"},{"size":1325,"mtime":1614226326790,"results":"71","hashOfConfig":"61"},{"size":1816,"mtime":1614259685688,"results":"72","hashOfConfig":"61"},{"size":1016,"mtime":1614604592461,"results":"73","hashOfConfig":"61"},{"size":2875,"mtime":1614588724515,"results":"74","hashOfConfig":"61"},{"size":433,"mtime":1613625910610,"results":"75","hashOfConfig":"61"},{"size":1577,"mtime":1611572401761,"results":"76","hashOfConfig":"61"},{"size":1923,"mtime":1614257122199,"results":"77","hashOfConfig":"61"},{"size":821,"mtime":1613725791292,"results":"78","hashOfConfig":"61"},{"size":707,"mtime":1613725820644,"results":"79","hashOfConfig":"61"},{"size":1366,"mtime":1613625910618,"results":"80","hashOfConfig":"61"},{"size":2727,"mtime":1613625910622,"results":"81","hashOfConfig":"61"},{"size":7685,"mtime":1614572220512,"results":"82","hashOfConfig":"61"},{"size":2427,"mtime":1614572220512,"results":"83","hashOfConfig":"61"},{"size":3768,"mtime":1614072058198,"results":"84","hashOfConfig":"61"},{"size":1272,"mtime":1614076937729,"results":"85","hashOfConfig":"61"},{"size":1853,"mtime":1614076187500,"results":"86","hashOfConfig":"61"},{"size":6980,"mtime":1614588956383,"results":"87","hashOfConfig":"61"},{"size":1167,"mtime":1614588781356,"results":"88","hashOfConfig":"61"},{"size":366,"mtime":1614597513448,"results":"89","hashOfConfig":"61"},{"size":9248,"mtime":1614667137367,"results":"90","hashOfConfig":"61"},{"size":360,"mtime":1612154376845,"results":"91","hashOfConfig":"61"},{"size":4585,"mtime":1614572220512,"results":"92","hashOfConfig":"61"},{"size":13226,"mtime":1614572220512,"results":"93","hashOfConfig":"61"},{"size":1277,"mtime":1613625910606,"results":"94","hashOfConfig":"61"},{"size":1331,"mtime":1613625910598,"results":"95","hashOfConfig":"61"},{"size":1165,"mtime":1614590928777,"results":"96","hashOfConfig":"61"},{"size":938,"mtime":1614588251957,"results":"97","hashOfConfig":"61"},{"size":4369,"mtime":1614663266236,"results":"98","hashOfConfig":"61"},{"size":5494,"mtime":1613627522998,"results":"99","hashOfConfig":"61"},{"size":3942,"mtime":1614318983372,"results":"100","hashOfConfig":"61"},{"size":736,"mtime":1613625910598,"results":"101","hashOfConfig":"61"},{"size":17513,"mtime":1614151317187,"results":"102","hashOfConfig":"61"},{"size":180,"mtime":1614597588693,"results":"103","hashOfConfig":"61"},{"size":830,"mtime":1614590528023,"results":"104","hashOfConfig":"61"},{"size":83,"mtime":1612154376845,"results":"105","hashOfConfig":"61"},{"size":3745,"mtime":1614254927535,"results":"106","hashOfConfig":"61"},{"size":14679,"mtime":1614664682952,"results":"107","hashOfConfig":"61"},{"size":1325,"mtime":1613625910610,"results":"108","hashOfConfig":"61"},{"size":1283,"mtime":1613625910606,"results":"109","hashOfConfig":"61"},{"size":137,"mtime":1612763237007,"results":"110","hashOfConfig":"61"},{"size":902,"mtime":1613625910630,"results":"111","hashOfConfig":"61"},{"size":910,"mtime":1611553966745,"results":"112","hashOfConfig":"61"},{"size":1099,"mtime":1613625910630,"results":"113","hashOfConfig":"61"},{"size":725,"mtime":1613725781316,"results":"114","hashOfConfig":"61"},{"size":4629,"mtime":1614601835996,"results":"115","hashOfConfig":"61"},{"size":1138,"mtime":1614150791806,"results":"116","hashOfConfig":"61"},{"size":1062,"mtime":1614236031533,"results":"117","hashOfConfig":"61"},{"size":3290,"mtime":1613715736785,"results":"118","hashOfConfig":"61"},{"size":8631,"mtime":1614687949810,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"16y9ohv",{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"146"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"122"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"122"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jitender/Desktop/react-eshakti/eshakti/src/index.js",[],["264","265"],"/home/jitender/Desktop/react-eshakti/eshakti/src/App.js",["266","267","268","269"],"/home/jitender/Desktop/react-eshakti/eshakti/src/context/action.types.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/pages/Home.component.js",["270","271","272","273","274","275","276"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/footer/Footer.component.js",["277"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/bottom-bar/BottomBar.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/return-and-cancellations/ReturnAndCancellations.component.js",["278","279"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/privacyPolicy/PrivacyAndPolicy.component.js",["280"],"import React, { useEffect } from \"react\";\nimport \"./privacy-and-policy.styles.scss\";\n\n// actions\nimport { getPages } from \"./../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// html parser\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default function PrivacyAndPolicy() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.home.staticPages);\n\n  function fetchData() {\n    dispatch(getPages());\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchData();\n  }, []);\n\n  let filtered, privacyAndPolicy;\n\n  // checking if privacy policy data exist in state\n  if (state !== undefined) {\n    // filter data with the name of partner\n    filtered = state.filter(\n      (each) => each.page_group.toLowerCase() === \"orders\"\n    );\n\n    // find ou data for affilate program page\n    privacyAndPolicy = filtered[0].page.filter(\n      (each) => each.page_name === \"Privacy & Policy\"\n    );\n    privacyAndPolicy = privacyAndPolicy[0].contents;\n  }\n\n  // if affilate page content exist return this html\n  if (privacyAndPolicy) {\n    return ReactHtmlParser(privacyAndPolicy);\n  }\n\n  return (\n    <div className=\"privacy-policy\">\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/shipping-and-payment-page/ShippingAndPayment.component.js",["281","282"],"import React, { useEffect } from \"react\";\nimport \"./shipping-and-payment.styles.scss\";\n\nimport { IoMdArrowDropright } from \"react-icons/io\";\n\n// actions\nimport { getPages } from \"./../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// html parser\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default function ShippingAndPayment() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.home.staticPages);\n\n  function fetchData() {\n    dispatch(getPages());\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchData();\n  }, []);\n\n  let filtered, paymentAndShippingContent;\n\n  // checking if privacy policy data exist in state\n  if (state !== undefined) {\n    // filter data with the name of partner\n    filtered = state.filter(\n      (each) => each.page_group.toLowerCase() === \"orders\"\n    );\n\n    // find ou data for affilate program page\n    paymentAndShippingContent = filtered[0].page.filter(\n      (each) => each.page_name === \"Payments & Shipping\"\n    );\n    paymentAndShippingContent = paymentAndShippingContent[0].contents;\n  }\n\n  // if affilate page content exist return this html\n  if (paymentAndShippingContent) {\n    return ReactHtmlParser(paymentAndShippingContent);\n  }\n\n  return (\n    <div className=\"shipping-and-payment\">\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/how-it-works-page/HowItWorks.component.js",["283","284","285"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/whishlist/Wishlist.component.js",["286"],"import React, { useEffect } from \"react\";\nimport \"./wishlist.styles.scss\";\n\nimport ProductCard from \"../productCard/ProductCard.component\";\n\n// react icons\nimport { BsHeartFill } from \"react-icons/bs\";\n\nimport { getWishList } from \"../../store/home/homeAction\";\n\n// react redux\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function Wishlist() {\n  const whishlist = useSelector((state) => state.home.userWishList);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userID = localStorage.getItem(\"es_user_id\");\n    dispatch(getWishList(userID));\n  }, []);\n\n  // console.log(whishlist.home.userWishList, \"data\");\n  return (\n    <div className=\"wishlist\">\n      <div className=\"inner-container\">\n        <h2 className=\"wishlist-title\">Your Wishlist</h2>\n\n        <div className=\"listing\">\n          {Array.isArray(whishlist) && whishlist.length ? (\n            whishlist.map((eachProduct, index) => (\n              <div className=\"item\" key={index}>\n                <span className=\"heartIcon\">\n                  <BsHeartFill />\n                </span>\n                <ProductCard product={eachProduct} />\n              </div>\n            ))\n          ) : (\n            <h4 className=\"no-items\">No Items in your whishlist</h4>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n",["287","288"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/search-page/Search.component.js",["289"],"import React, { useState } from \"react\";\nimport \"./search.styles.scss\";\n\n// react-redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { searchProduct } from \"../../store/home/homeAction\";\n\n// react icons\nimport { AiOutlineSearch, AiOutlineCloseSquare } from \"react-icons/ai\";\nimport ProductCard from \"../productCard/ProductCard.component\";\n\n// react router\nimport { useLocation } from \"react-router-dom\";\n\n// A custom hook that builds on useLocation to parse the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default function Search() {\n  const dispatch = useDispatch();\n  let query = useQuery();\n  const [inputVal, setInputVal] = useState(query.get(\"keywords\"));\n  const searchedProducts =\n    useSelector((state) => state.home.searchedProducts) || [];\n\n  function onChangeInput(e) {\n    setInputVal(e.target.value);\n    console.log(e.target.value);\n  }\n\n  function onClick() {\n    dispatch(searchProduct({ pname: inputVal }));\n  }\n\n  return (\n    <div className=\"search-page\">\n      <div className=\"search-input\">\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            placeholder=\"search any product\"\n            className=\"searchbox\"\n            onChange={onChangeInput}\n          />\n          <span className=\"search-icon\" onClick={onClick}>\n            <AiOutlineSearch />\n          </span>\n        </div>\n      </div>\n\n      <h4 className=\"search-text\">Keywords : {inputVal}</h4>\n\n      <div className=\"searched-items\">\n        {searchedProducts.length > 0 ? (\n          searchedProducts.map((eachProduct, index) => (\n            <ProductCard product={eachProduct} key={index} />\n          ))\n        ) : (\n          <h4 className=\"no-result\">No results</h4>\n        )}\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/myAccount-page/MyAccountRoutes.js",["290","291"],"/home/jitender/Desktop/react-eshakti/eshakti/src/store/home/homeReducer.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/mid-banner/MidBanner.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/ourQualities/OurQualities.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/search-popup/SearchPopup.component.js",["292"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/brand-filter/BrandFilter.component.js",["293"],"import React from \"react\";\nimport \"./brands-filter.styles.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport default function BrandFilter({ filterData }) {\n  return (\n    <div className=\"brand-names-filter\">\n      <h2 className=\"title\">{filterData.name || \"\"}</h2>\n\n      <ul className=\"list\">\n        {filterData &&\n          filterData.value.map((eachVal, index) => {\n            return (\n              <li className=\"list-item\" key={index}>\n                <div className=\"eachValue\">\n                  <input type=\"checkbox\" value={eachVal.id} />\n                  <span>{eachVal.value}</span>\n                </div>\n                <div className=\"quantity\">\n                  <span className=\"text\">2</span>\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/sizeFilter/SizeFilter.component.js",[],["294","295"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/news-card/NewsCard.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/order-details-page/OrderDetailsPage.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/shipping-info-page/BillingAddress.js",["296","297","298","299","300","301","302","303","304","305","306","307","308","309","310"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCart,\n  updateCart,\n  removeCart,\n  placeOrder,\n  getCountryList,\n  getStateList,\n  getCityList,\n  getShippingChargesList,\n} from \"../../store/home/homeAction\";\nimport \"./shippingInfopage.styles.scss\";\n\nimport { Link } from \"react-router-dom\";\nimport CartProductCard from \"../cart-product-card/CartProductCard.component\";\nimport FormInput from \"../form-input/FormInput.component\";\nimport SelectFormElement from \"../select-form-element/SelectFormElement.component\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { IoIosArrowBack } from \"react-icons/io\";\n\nexport default function BillingAddress({\n  setBillingName,\n  setBillingPhone,\n  setBillingAlternate_phone,\n  setBillingAddress,\n  setBillingAddress_type,\n  setBillingCity,\n  setBillingCountry,\n  setBillingState,\n  setBillingZip_code,\n  setBillingLandmark,\n  setBillingShipping_id,\n}) {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [alternate_phone, setAlternate_phone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [address_type, setAddress_type] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip_code, setZip_code] = useState(\"\");\n  const [landmark, setLandmark] = useState(\"\");\n  const [shipping_id, setShipping_id] = useState(\"\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const cart = useSelector((state) => state.home.cart);\n  const countryList = useSelector((state) => state.home.countryList);\n\n  const stateList = useSelector((state) => state.home.stateList);\n  const cityList = useSelector((state) => state.home.cityList);\n  const shippingChargesList = useSelector(\n    (state) => state.home.shippingChargesList\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCart());\n    dispatch(getCountryList());\n\n    // dispatch(getCityList());\n    dispatch(getShippingChargesList());\n  }, []);\n\n  const updateQunitity = (type, cart_id) => {\n    let quantity;\n    if (type === \"add\") {\n      for (let i = 0; i < cart.length; i++) {\n        if (cart_id === cart[i].cart_id) {\n          quantity = cart[i].quantity + 1;\n        }\n      }\n    } else {\n      for (let i = 0; i < cart.length; i++) {\n        if (cart_id === cart[i].cart_id) {\n          if (cart[i].quantity > 1) {\n            quantity = cart[i].quantity - 1;\n          }\n        }\n      }\n    }\n    let data = {\n      quantity: quantity,\n    };\n    dispatch(updateCart(data, cart_id));\n  };\n\n  const cartGrandTotal = () => {\n    let total = 0;\n    if (cart) {\n      for (let i = 0; i < cart.length; i++) {\n        total = total + cart[i].price;\n      }\n    }\n    return total;\n  };\n\n  const onPlaceOrder = (e) => {\n    e.preventDefault();\n    let cart_id = [];\n    if (!cart.length > 0) {\n      toast(\"Your cart is empty!\", {\n        type: toast.TYPE.ERROR,\n        autoClose: 10000,\n      });\n      return false;\n    }\n    for (let i = 0; i < cart.length; i++) {\n      cart_id.push(cart[i].cart_id);\n    }\n\n    let shipping_charge = 0;\n\n    for (let i = 0; i < shippingChargesList.length; i++) {\n      if (shipping_id == shippingChargesList[i].id) {\n        console.log(shippingChargesList[i]);\n        shipping_charge = shippingChargesList[i].cost;\n      }\n    }\n\n    let data = {\n      totPrice: cartGrandTotal(),\n      user_id: localStorage.getItem(\"es_user_id\"),\n      shipping_charge: shipping_charge,\n      customization_charge: 0,\n      cart_id: cart_id,\n      shipping_address: {\n        name: name,\n        phone: phone,\n        alternate_phone: alternate_phone,\n        address: address,\n        address2: address,\n        address_type: address_type,\n        city: city,\n        country: country,\n        state: state,\n        zip_code: zip_code,\n        landmark: landmark,\n      },\n      payment: {\n        mode: \"COD\",\n        status: \"Unpaid\",\n      },\n    };\n\n    dispatch(placeOrder(data));\n  };\n\n  const selectCountry = (e) => {\n    setCountry(e.target.value);\n    setBillingCountry(e.target.value);\n    dispatch(getStateList(e.target.value));\n  };\n  const selectState = (e) => {\n    setState(e.target.value);\n    setBillingState(e.target.value);\n    dispatch(getCityList(e.target.value));\n  };\n  const selectCity = (e) => {\n    setCity(e.target.value);\n    setBillingCity(e.target.value);\n  };\n  const selectPincode = (e) => {\n    setZip_code(e.target.value);\n    setBillingZip_code(e.target.value);\n    let data = {\n      country_id: country,\n      state_id: state,\n      city_id: city,\n      postal_code: e.target.value,\n    };\n    dispatch(getShippingChargesList(data));\n  };\n  const selectCharges = (e) => {\n    setShipping_id(e.target.value);\n    setBillingShipping_id(e.target.value);\n  };\n  return (\n    <div>\n      <div className=\"mid-title\">\n        <h2 className=\"title-text\">Billing Address</h2>\n      </div>\n\n      <div className=\"inline-form-shipping-address\">\n        <FormInput\n          type=\"text\"\n          placeholder=\"Full Name\"\n          className={\"firstName\"}\n          name=\"name\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n            setBillingName(e.target.value);\n          }}\n          required\n        />\n        {/* <FormInput\n                  type={\"text\"}\n                  placeholder={\"Last Name\"}\n                  className=\"lastName\"\n                  name={\"lastName\"}\n                /> */}\n      </div>\n\n      <FormInput\n        type={\"text\"}\n        placeholder={\"Apartment, Suit, etc\"}\n        className=\"residency\"\n        name=\"address\"\n        value={address}\n        onChange={(e) => {\n          setAddress(e.target.value);\n          setBillingAddress(e.target.value);\n        }}\n        required\n      />\n      {/* <FormInput\n                type={\"text\"}\n                placeholder={\"City\"}\n                className={\"city\"}\n                name={\"city\"}\n              /> */}\n      <div className=\"inline-form-field\">\n        <select onChange={selectCountry} required>\n          <option>Select Country</option>\n          {countryList &&\n            countryList.map((country, key) => (\n              <option key={key} value={country.id}>\n                {country.name}\n              </option>\n            ))}\n        </select>\n        <select onChange={selectState} required>\n          <option>Select State</option>\n          {stateList &&\n            stateList.map((state, key) => (\n              <option key={key} value={state.id}>\n                {state.name}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"inline-form-field\" required>\n        <select onChange={selectCity}>\n          <option>Select City</option>\n          {cityList &&\n            cityList.map((city, key) => (\n              <option key={key} value={city.id}>\n                {city.name}\n              </option>\n            ))}\n        </select>\n\n        <FormInput\n          type={\"text\"}\n          className=\"pincode\"\n          placeholder=\"PIN\"\n          value={zip_code}\n          onChange={selectPincode}\n          required\n        />\n      </div>\n      {/* <div className=\"inline-form-field select-charges\">\n        <select onChange={selectCharges} required>\n          <option>Select Charges</option>\n          {shippingChargesList &&\n            shippingChargesList.map((method, key) => (\n              <option key={key} value={method.id}>\n                {method.label}\n              </option>\n            ))}{\" \"}\n        </select>\n      </div> */}\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/orderhistory/OrderHistoryList.component.js",["311"],"import React, { useEffect } from \"react\";\n\nimport { getOrdersList } from \"../../store/home/homeAction\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function OrderHistoryList() {\n  // using action dispatcher and selector to get and set state\n  const dispatch = useDispatch();\n  const userOrdersList = useSelector((state) => state.home.userOrdersList);\n\n  const userId = localStorage.getItem(\"es_user_id\");\n\n  useEffect(() => {\n    dispatch(getOrdersList(userId));\n  }, []);\n\n  return (\n    <>\n      <div className=\"my-orders-slot\">\n        <p className=\"info-side-title\">My orders</p>\n        {userOrdersList &&\n          userOrdersList.map((order) => (\n            <div className=\"each-order\">\n              {/* <div className=\"img-and-common-details\">\n                <div className=\"order-img\">\n                  <img\n                    width={150}\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSCFvT5KiIRBpnM2L6FAAaSioCofkvQML1IIA&usqp=CAU\"\n                    alt=\"\"\n                  />\n                </div>\n              </div> */}\n              <div className=\"details\">\n                <div className=\"common-details\">\n                  <div className=\"name common-title-text\">Order ID</div>\n\n                  <div className=\"orderId\">#{order.order_id}</div>\n                </div>\n                <div className=\"order-date\">\n                  <span className=\"ordered-title-text common-title-text\">\n                    Ordered On\n                  </span>\n                  <span className=\"value-text\"> {order.order_date}</span>\n                </div>\n                <div className=\"price\">\n                  {\" \"}\n                  <span className=\"price-title-text common-title-text\">\n                    Price\n                  </span>\n                  <div className=\"value-text\">${order.total_price}</div>\n                </div>\n                <div className=\"price\">\n                  {\" \"}\n                  <span className=\"price-title-text common-title-text\">\n                    Status\n                  </span>\n                  <div className=\"status\">{order.status}</div>\n                </div>\n                <div className=\"price\">\n                  {\" \"}\n                  <div className=\"order-details-btn\">View Order</div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/login/Login.component.js",["312"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onLogin } from \"../../store/home/homeAction\";\nimport \"./login.styles.scss\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport FormInput from \"../form-input/FormInput.component\";\nimport { Link } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Login = ({ open, onCloseModal, openRegister }) => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.name.toLowerCase() === \"email\") {\n      setEmail(e.target.value);\n    }\n\n    if (e.target.name.toLowerCase() === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password.length < 6) {\n      toast(\"Password should minimum of 6 character\", {\n        type: toast.TYPE.ERROR,\n        autoClose: 10000,\n      });\n      return false;\n    }\n\n    let data = {\n      email: email,\n      password: password,\n    };\n\n    dispatch(onLogin(data));\n  };\n\n  const onOpenRegiterModal = () => {\n    openRegister();\n    onCloseModal();\n  };\n  return (\n    <Modal open={open} onClose={onCloseModal} center>\n      <ToastContainer />\n      <div className=\"inner-container-login\">\n        <div className=\"title\">\n          <h2 className=\"title-text\">Sign in or Register</h2>\n        </div>\n        <div className=\"content\">\n          <div className=\"left\">\n            <div className=\"form\">\n              <form onSubmit={onSubmit}>\n                <div className=\"form-element-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <FormInput\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className=\"username\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                    required\n                  />\n                </div>\n                <div className=\"form-element-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <FormInput\n                    type=\"password\"\n                    placeholder={\"Password\"}\n                    className=\"username\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n                <div className=\"forgott-password-link\">\n                  <Link className=\"forgot-link\" to=\"\">\n                    Forgot your Password ?\n                  </Link>\n                </div>\n                <div className=\"form-element-group\">\n                  <FormInput\n                    type=\"submit\"\n                    className=\"submit-btn\"\n                    name=\"submit-btn\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div className=\"right\">\n            <h3 className=\"area-title\">New Here</h3>\n            <div className=\"discription\">\n              <div className=\"heading-text\">Registration is free and easy</div>\n              <ul className=\"points\">\n                <li>Faster checkout</li>\n                <li>Save multiple addresses</li>\n                <li>View and track orders and more</li>\n              </ul>\n            </div>\n            <button className=\"create-account-btn\" onClick={onOpenRegiterModal}>\n              Create An Account\n            </button>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Login;\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/feedback-form/FeedbackForm.component.js",[],["313","314"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/ratingstars/RatingStars.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/wholesale-page/WholeSale.component.js",["315","316"],"import React, { useEffect, useState } from \"react\";\nimport \"./whole-sale.styles.scss\";\n\n// react icons\nimport { BsDot } from \"react-icons/bs\";\n\n// react toastify\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// react-scroll\nimport Scroll from \"react-scroll\";\nimport { Link } from \"react-scroll\";\n\nimport { b2bEnquiry } from \"../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function WholeSale() {\n  const [storeName, setStoreName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [annualRevnue, setAnnualRevnue] = useState(\"\");\n  const [personName, setPersonName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [extraDetails, setExtraDetails] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  // notify toast\n  const notifySubmition = () =>\n    toast.info(\"Thanks for contacting us, we'll reach to you soon\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    const dataToSend = {\n      name: personName,\n      store_name: storeName,\n      email: email,\n      phone: phone,\n      address: address,\n      annual_revenue: annualRevnue,\n      description: extraDetails,\n    };\n\n    dispatch(b2bEnquiry(dataToSend, notifySubmition));\n\n    // making empty all the values of form fields\n    setStoreName(\"\");\n    setPersonName(\"\");\n    setPhone(\"\");\n    setAddress(\"\");\n    setAnnualRevnue(\"\");\n    setExtraDetails(\"\");\n    setEmail(\"\");\n  }\n\n  return (\n    <div className=\"whole-sale\">\n      <ToastContainer />\n      <div className=\"title-text\">\n        <p>Retailers/Resellers</p>\n        <h1 className=\"title\">A Big opprtunity to grow your business</h1>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"write-us\">\n          <div className=\"left\">\n            <img\n              src=\"https://img1.eshakti.com/bannerimages/wholesalemain.jpg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"right\">\n            <h3>What's New Here</h3>\n            <ul className=\"key-points\">\n              <li>\n                <span className=\"icon\">\n                  <BsDot />\n                </span>\n                <span className=\"text\">\n                  Clothes to your customers' size and style!\n                </span>\n              </li>\n              <li>\n                <span className=\"icon\">\n                  <BsDot />\n                </span>\n                <span className=\"text\">\n                  Clothes to your customers' size and style!\n                </span>\n              </li>\n              <li>\n                <span className=\"icon\">\n                  <BsDot />\n                </span>\n                <span className=\"text\">\n                  Clothes to your customers' size and style!\n                </span>\n              </li>\n              <li>\n                <span className=\"icon\">\n                  <BsDot />\n                </span>\n                <span className=\"text\">\n                  Clothes to your customers' size and style!\n                </span>\n              </li>\n            </ul>\n            <div className=\"btn-part\">\n              <Link to=\"enquireyForm\" smooth={true}>\n                <button className=\"write-us-btn\">\n                  <span>Write US Today</span>\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"custom-clothing\">\n          <div className=\"left\">\n            <h3>eShakti</h3>\n            <p>The #1 custom-clothing brand online now comes to you!</p>\n          </div>\n          <div className=\"right\">\n            <img\n              src=\"https://images.theconversation.com/files/293774/original/file-20190924-54793-157i3zo.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=1200&h=1200.0&fit=crop\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n\n        <div className=\"enquiry-form\" id=\"enquireyForm\">\n          <div className=\"title-area\">\n            <h3 className=\"title-text\">eShakti B2B Inquiry Form</h3>\n            <p>\n              Thank you for your interest in eShakti. May we request you to fill\n              up a few details. Our representative will be in touch with you\n              once we receive your information.\n            </p>\n          </div>\n\n          <div className=\"form\">\n            <form onSubmit={onSubmit}>\n              <div className=\"form-control\">\n                <label htmlFor=\"#\">Name of the Store</label>\n                <input\n                  type=\"text\"\n                  value={storeName}\n                  onChange={(e) => setStoreName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"#\">Address</label>\n                <textarea\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                  required\n                ></textarea>\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"#\">Annual Revenue in USD</label>\n                <input\n                  type=\"number\"\n                  value={annualRevnue}\n                  onChange={(e) => setAnnualRevnue(e.target.value)}\n                  required\n                />\n              </div>\n\n              <div className=\"form-control\">\n                <label htmlFor=\"\">Name of Contact Person</label>\n                <input\n                  type=\"text\"\n                  value={personName}\n                  onChange={(e) => setPersonName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"\">Email ID</label>\n                <input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"\">Phone Number (with Area Code)</label>\n                <input\n                  type=\"number\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"#\">Anything else you would like to add:</label>\n                <textarea\n                  value={extraDetails}\n                  onChange={(e) => setExtraDetails(e.target.value)}\n                  required\n                ></textarea>\n              </div>\n\n              <div className=\"form-control\">\n                <input type=\"submit\" value=\"Submit\" />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/store/types.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/store/store.js",["317"],"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./rootReducer\";\n\nlet middleware = [thunk];\n\nlet initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","/home/jitender/Desktop/react-eshakti/eshakti/src/store/home/homeAction.js",["318","319"],"/home/jitender/Desktop/react-eshakti/eshakti/src/context/reducers/appReducer.js",["320"],"import { OPEN_MENU_SIDEBAR, SET_CATEGORIES } from \"../action.types\";\n\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case OPEN_MENU_SIDEBAR:\n      return { ...state, menu_sidebar: action.payload };\n      break;\n    case SET_CATEGORIES:\n      return { ...state, nav_links: action.payload };\n\n    default:\n      return state;\n  }\n};\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/topNavbar/TopNav.component.js",["321","322","323","324","325","326"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/shipping-info-page/ShippingInfoPage.component.js",["327","328","329","330","331","332","333","334","335"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCart,\n  updateCart,\n  removeCart,\n  placeOrder,\n  getCountryList,\n  getStateList,\n  getCityList,\n  getShippingChargesList,\n} from \"../../store/home/homeAction\";\nimport \"./shippingInfopage.styles.scss\";\n\nimport { Link } from \"react-router-dom\";\nimport CartProductCard from \"../cart-product-card/CartProductCard.component\";\nimport FormInput from \"../form-input/FormInput.component\";\nimport SelectFormElement from \"../select-form-element/SelectFormElement.component\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport BillingAddress from \"./BillingAddress\";\n\nexport default function ShippingInfoPage() {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [alternate_phone, setAlternate_phone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [address_type, setAddress_type] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip_code, setZip_code] = useState(\"\");\n  const [landmark, setLandmark] = useState(\"\");\n  const [shipping_id, setShipping_id] = useState(\"\");\n  const [shippingAddress, setShippingAddress] = useState(false);\n\n  const [billingname, setBillingName] = useState(\"\");\n  const [billingphone, setBillingPhone] = useState(\"\");\n  const [billingalternate_phone, setBillingAlternate_phone] = useState(\"\");\n  const [billingaddress, setBillingAddress] = useState(\"\");\n  const [billingaddress_type, setBillingAddress_type] = useState(\"\");\n  const [billingcity, setBillingCity] = useState(\"\");\n  const [billingcountry, setBillingCountry] = useState(\"\");\n  const [billingstate, setBillingState] = useState(\"\");\n  const [billingzip_code, setBillingZip_code] = useState(\"\");\n  const [billinglandmark, setBillingLandmark] = useState(\"\");\n  const [billingshipping_id, setBillingShipping_id] = useState(\"\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const cart = useSelector((state) => state.home.cart);\n  const countryList = useSelector((state) => state.home.countryList);\n\n  const stateList = useSelector((state) => state.home.stateList);\n  const cityList = useSelector((state) => state.home.cityList);\n  const shippingChargesList = useSelector(\n    (state) => state.home.shippingChargesList\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCart());\n    dispatch(getCountryList());\n\n    // dispatch(getCityList());\n    dispatch(getShippingChargesList());\n  }, []);\n\n  const updateQunitity = (type, cart_id) => {\n    let quantity;\n    if (type === \"add\") {\n      for (let i = 0; i < cart.length; i++) {\n        if (cart_id === cart[i].cart_id) {\n          quantity = cart[i].quantity + 1;\n        }\n      }\n    } else {\n      for (let i = 0; i < cart.length; i++) {\n        if (cart_id === cart[i].cart_id) {\n          if (cart[i].quantity > 1) {\n            quantity = cart[i].quantity - 1;\n          }\n        }\n      }\n    }\n    let data = {\n      quantity: quantity,\n    };\n    dispatch(updateCart(data, cart_id));\n  };\n\n  const cartGrandTotal = () => {\n    let total = 0;\n    if (cart) {\n      for (let i = 0; i < cart.length; i++) {\n        total = total + cart[i].price;\n      }\n    }\n    return total;\n  };\n\n  const onPlaceOrder = (e) => {\n    e.preventDefault();\n    let cart_id = [];\n    if (!cart.length > 0) {\n      toast(\"Your cart is empty!\", {\n        type: toast.TYPE.ERROR,\n        autoClose: 10000,\n      });\n      return false;\n    }\n    for (let i = 0; i < cart.length; i++) {\n      cart_id.push(cart[i].cart_id);\n    }\n\n    let shipping_charge = 0;\n\n    for (let i = 0; i < shippingChargesList.length; i++) {\n      if (shipping_id == shippingChargesList[i].id) {\n        console.log(shippingChargesList[i]);\n        shipping_charge = shippingChargesList[i].cost;\n      }\n    }\n\n    let data = {\n      totPrice: cartGrandTotal(),\n      user_id: localStorage.getItem(\"es_user_id\"),\n      shipping_charge: shipping_charge,\n      customization_charge: 0,\n      cart_id: cart_id,\n      shipping_address: {\n        name: name,\n        phone: phone,\n        alternate_phone: alternate_phone,\n        address: address,\n        address2: address,\n        address_type: address_type,\n        city: city,\n        country: country,\n        state: state,\n        zip_code: zip_code,\n        landmark: landmark,\n      },\n\n      payment: {\n        mode: \"COD\",\n        status: \"Unpaid\",\n      },\n    };\n\n    shippingAddress\n      ? (data.billing_address = {\n          name: billingname,\n          phone: billingphone,\n          alternate_phone: billingalternate_phone,\n          address: billingaddress,\n          address2: billingaddress,\n          address_type: billingaddress_type,\n          city: billingcity,\n          country: billingcountry,\n          state: billingstate,\n          zip_code: billingzip_code,\n          landmark: billinglandmark,\n        })\n      : (data.billing_address = {\n          name: name,\n          phone: phone,\n          alternate_phone: alternate_phone,\n          address: address,\n          address2: address,\n          address_type: address_type,\n          city: city,\n          country: country,\n          state: state,\n          zip_code: zip_code,\n          landmark: landmark,\n        });\n\n    dispatch(placeOrder(data));\n  };\n\n  const selectCountry = (e) => {\n    setCountry(e.target.value);\n    dispatch(getStateList(e.target.value));\n  };\n  const selectState = (e) => {\n    setState(e.target.value);\n    dispatch(getCityList(e.target.value));\n  };\n  const selectCity = (e) => {\n    setCity(e.target.value);\n  };\n  const selectPincode = (e) => {\n    setZip_code(e.target.value);\n    let data = {\n      country_id: country,\n      state_id: state,\n      city_id: city,\n      postal_code: e.target.value,\n    };\n    dispatch(getShippingChargesList(data));\n  };\n  const selectCharges = (e) => {\n    setShipping_id(e.target.value);\n  };\n  return (\n    <div className=\"shipping-info\">\n      <ToastContainer></ToastContainer>\n      <div className=\"inner-container\">\n        <div className=\"left\">\n          <div className=\"top-title-area\">\n            <h2 className=\"title\">contact information</h2>\n            <div className=\"login-link\">\n              <Link className=\"link\" to=\"/login\">\n                Already have an account ? Log In\n              </Link>\n            </div>\n          </div>\n          <div className=\"info-form\">\n            <form onSubmit={onPlaceOrder}>\n              <FormInput\n                type={\"text\"}\n                placeholder={\"Enter Phone Number\"}\n                name={\"phone\"}\n                value={phone}\n                onChange={(e) => {\n                  var text = e.target.value.replace(/[^0-9+]/gi, \"\");\n                  setPhone(text);\n                }}\n                required\n              />\n              <div className=\"mid-title\">\n                <h2 className=\"title-text\">Shipping Address</h2>\n              </div>\n\n              <div className=\"inline-form-shipping-address\">\n                <FormInput\n                  type=\"text\"\n                  placeholder=\"Full Name\"\n                  className={\"firstName\"}\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n                {/* <FormInput\n                  type={\"text\"}\n                  placeholder={\"Last Name\"}\n                  className=\"lastName\"\n                  name={\"lastName\"}\n                /> */}\n              </div>\n\n              <FormInput\n                type={\"text\"}\n                placeholder={\"Apartment, Suit, etc\"}\n                className=\"residency\"\n                name=\"address\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                required\n              />\n              {/* <FormInput\n                type={\"text\"}\n                placeholder={\"City\"}\n                className={\"city\"}\n                name={\"city\"}\n              /> */}\n              <div className=\"inline-form-field\">\n                <select onChange={selectCountry} required>\n                  <option>Select Country</option>\n                  {countryList &&\n                    countryList.map((country, key) => (\n                      <option key={key} value={country.id}>\n                        {country.name}\n                      </option>\n                    ))}\n                </select>\n                <select onChange={selectState} required>\n                  <option>Select State</option>\n                  {stateList &&\n                    stateList.map((state, key) => (\n                      <option key={key} value={state.id}>\n                        {state.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n              <div className=\"inline-form-field\" required>\n                <select onChange={selectCity}>\n                  <option>Select City</option>\n                  {cityList &&\n                    cityList.map((city, key) => (\n                      <option key={key} value={city.id}>\n                        {city.name}\n                      </option>\n                    ))}\n                </select>\n\n                <FormInput\n                  type={\"text\"}\n                  className=\"pincode\"\n                  placeholder=\"PIN\"\n                  value={zip_code}\n                  onChange={selectPincode}\n                  required\n                />\n              </div>\n              <div className=\"inline-form-field select-charges\">\n                <select onChange={selectCharges} required>\n                  <option>Select Charges</option>\n                  {shippingChargesList &&\n                    shippingChargesList.map((method, key) => (\n                      <option key={key} value={method.id}>\n                        {method.label}\n                      </option>\n                    ))}{\" \"}\n                </select>\n              </div>\n              <div className=\"save-info\">\n                <FormInput\n                  type={\"checkbox\"}\n                  className=\"save-info-checkbox\"\n                  checked={!shippingAddress ? true : false}\n                  onClick={() => setShippingAddress(!shippingAddress)}\n                />\n                <p>Use shipping address same as billing address</p>\n              </div>\n\n              {shippingAddress && (\n                <BillingAddress\n                  setBillingName={(text) => setBillingName(text)}\n                  setBillingPhone={(text) => setBillingPhone(text)}\n                  setBillingAlternate_phone={(text) =>\n                    setBillingAlternate_phone(text)\n                  }\n                  setBillingAddress={(text) => setBillingAddress(text)}\n                  setBillingAddress_type={(text) =>\n                    setBillingAddress_type(text)\n                  }\n                  setBillingCity={(text) => setBillingCity(text)}\n                  setBillingCountry={(text) => setBillingCountry(text)}\n                  setBillingState={(text) => setBillingState(text)}\n                  setBillingZip_code={(text) => setBillingZip_code(text)}\n                  setBillingLandmark={(text) => setBillingLandmark(text)}\n                  setBillingShipping_id={(text) => setBillingShipping_id(text)}\n                ></BillingAddress>\n              )}\n\n              <div className=\"bottom\">\n                <div className=\"return-link\">\n                  <Link to=\"/\" className=\"link\">\n                    <span className=\"icon\">\n                      <IoIosArrowBack />\n                    </span>\n                    Return to Cart\n                  </Link>\n                </div>\n                <FormInput\n                  type={\"submit\"}\n                  className=\"submit-btn\"\n                  value=\"continue to shopping\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"cart-products\">\n            {cart && cart.length > 0\n              ? cart.map((product) => <CartProductCard product={product} />)\n              : \" \"}\n\n            {/* <CartProductCard /> */}\n          </div>\n          <div className=\"cost-amounts\">\n            <div className=\"sub-total\">\n              <span className=\"text\">Sub Total</span>\n              <span className=\"value\">${cartGrandTotal()}</span>\n            </div>\n            <div className=\"shipping\">\n              <span className=\"text\">Shipping</span>\n              <span className=\"value\">calculated at next step</span>\n            </div>\n            <div className=\"tax\">\n              <span className=\"text\">Taxes (estimated)</span>\n              <span className=\"value\">$0</span>\n            </div>\n            <div className=\"total\">\n              <span className=\"text\">Total</span>\n              <span className=\"value\">${cartGrandTotal()}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/eshakti-sizes/EshaktiSizes.component.js",["336"],"import React, { useEffect } from \"react\";\nimport \"./eshakti-sizes.styles.scss\";\n\n// actions\nimport { getPages } from \"./../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// html parser\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default function EshaktiSizes() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.home.staticPages);\n\n  function fetchData() {\n    dispatch(getPages());\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchData();\n  }, []);\n\n  let filtered, eshaktiSizes;\n\n  // checking if privacy policy data exist in state\n  if (state !== undefined) {\n    // filter data with the name of partner\n    filtered = state.filter(\n      (each) => each.page_group.toLowerCase() === \"about\"\n    );\n\n    // find ou data for affilate program page\n    eshaktiSizes = filtered[0].page.filter(\n      (each) => each.page_name === \"Size Chart\"\n    );\n    eshaktiSizes = eshaktiSizes[0].contents;\n  }\n\n  // if affilate page content exist return this html\n  if (eshaktiSizes) {\n    return ReactHtmlParser(eshaktiSizes);\n  }\n\n  return (\n    <div className=\"eshakti-sizes\">\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/about-us/AboutUs.component.js",["337","338"],"import React, { useEffect } from \"react\";\nimport \"./about-us.styles.scss\";\n\n// actions\nimport { getPages } from \"./../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// html parser\nimport ReactHtmlParser from \"react-html-parser\";\n\n// our custom components\nimport CustomerReviewCard from \"../customer-review-card/CustomerReviewCard.component\";\n\nexport default function AboutUs() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.home.staticPages);\n\n  function fetchData() {\n    dispatch(getPages());\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchData();\n  }, []);\n\n  let filtered, aboutUs;\n\n  // checking if privacy policy data exist in state\n  if (state !== undefined) {\n    // filter data with the name of partner\n    filtered = state.filter(\n      (each) => each.page_group.toLowerCase() === \"about\"\n    );\n\n    // find ou data for affilate program page\n    aboutUs = filtered[0].page.filter((each) => each.page_name === \"eshakti\");\n    aboutUs = aboutUs[0].contents;\n  }\n\n  // if affilate page content exist return this html\n\n  if (aboutUs) {\n    return ReactHtmlParser(aboutUs);\n  }\n\n  return (\n    <div className=\"about-us\">\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/customer-speak-page/CustomerSpeakPage.component.js",["339"],"import React, { useEffect } from \"react\";\nimport \"./customer-speak-page.styles.scss\";\n\nimport CustomerReviewCard from \"../customer-review-card/CustomerReviewCard.component\";\n\n// actions\nimport { getCustomerSpeaksComments } from \"./../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function CustomerSpeakPage() {\n  const dispatch = useDispatch();\n\n  const customerComments = useSelector(\n    (state) => state.home.customerSpeaksComments\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(getCustomerSpeaksComments());\n  }, []);\n\n  return (\n    <div className=\"customer-speaks\">\n      <h1 className=\"main-title\">Customer Speaks</h1>\n      <p className=\"page-desc\">\n        We love to hear from you just email us with whatever you'd like to share\n        – whether it’s feedback on our products, customer service.\n      </p>\n      <div className=\"content\">\n        {customerComments &&\n          customerComments.map((comment, index) => (\n            <CustomerReviewCard key={index} comment={comment} />\n          ))}\n\n        <CustomerReviewCard />\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/axios/requests.js",["340"],"export default {\n  getProductCategory: \"product-categories\",\n  getProductByCategory: \"get-product-by-category\",\n  onLogin: \"login\",\n  onRegister: \"register\",\n  getHomePageProducts: \"show-home-product\",\n  getProduct: \"products\",\n  getProductById: \"products\",\n  cart: \"cart\",\n  order: \"order\",\n  getPages: \"get-pages\",\n  getCountry: \"countries-list\",\n  getState: \"states-list\",\n  getCity: \"cities-list\",\n  getShippingCharges: \"selling-zone-with-charge\",\n  getOrdersList: \"order\",\n  updateUserDetails: \"user-details\",\n  getAccountDetails: \"get-account-detail\",\n  uploadProfilePicture: \"upload-profile-picture\",\n  getUserDetails: \"get-account-detail\",\n  getFiltersDetails: \"filter-data\",\n  getWishList: \"get-wishlist\",\n  addToWishList: \"add-to-wishlist\",\n  removeFromWishList: \"remove-wishlist\",\n  search: \"search\",\n  getShippingDetails: \"get-shipping-address\",\n  sendB2BForm: \"b2b-enquiry\",\n  getCustomerSpeaksComments: \"customer-speak\",\n};\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productCard/ProductCard.component.js",["341"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/signup/SignUp.js",["342","343","344"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onRegister } from \"../../store/home/homeAction\";\nimport \"./signup.scss\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport FormInput from \"../form-input/FormInput.component\";\nimport { Link } from \"react-router-dom\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SignUp = ({ open, onCloseModal }) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [c_password, setConfirmPassword] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.name.toLowerCase() === \"name\") {\n      var text = e.target.value.replace(/[^a-z ]/gi, \"\");\n\n      setName(text);\n    }\n    if (e.target.name.toLowerCase() === \"email\") {\n      setEmail(e.target.value);\n    }\n\n    if (e.target.name.toLowerCase() === \"phone\") {\n      var text = e.target.value.replace(/[^0-9+]/gi, \"\");\n      setPhone(text);\n    }\n\n    if (e.target.name.toLowerCase() === \"password\") {\n      setPassword(e.target.value);\n    }\n    if (e.target.name.toLowerCase() === \"c_password\") {\n      setConfirmPassword(e.target.value);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (password.length < 6) {\n      toast(\"Password should minimum of 6 character\", {\n        type: toast.TYPE.ERROR,\n        autoClose: 10000,\n      });\n      return false;\n    }\n\n    let data = {\n      name: name,\n      email: email,\n      phone: phone,\n      password: password,\n      c_password: c_password,\n    };\n\n    dispatch(onRegister(data));\n  };\n\n  return (\n    <Modal open={open} onClose={onCloseModal} center>\n      <ToastContainer />\n      <div className=\"inner-container-signup\">\n        <div className=\"title\">\n          <h2 className=\"title-text\">Register</h2>\n        </div>\n        <form onSubmit={onSubmit}>\n          <div className=\"content\">\n            <div className=\"left\">\n              <div className=\"form\">\n                <div className=\"form-element-group\">\n                  <label htmlFor=\"username\">Name</label>\n                  <FormInput\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className=\"username\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    pattern=\"[a-zA-Z]{1,}\"\n                    required\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"main-wrap\">\n              <div className=\"left\">\n                <div className=\"form\">\n                  <div className=\"form-element-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <FormInput\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      className=\"username\"\n                      name=\"email\"\n                      value={email}\n                      onChange={handleChange}\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-element-group\">\n                    <label htmlFor=\"username\">Password</label>\n                    <FormInput\n                      type=\"password\"\n                      placeholder={\"Password\"}\n                      className=\"username\"\n                      name=\"password\"\n                      value={password}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"left\">\n                <div className=\"form\">\n                  <div className=\"form-element-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <FormInput\n                      type=\"text\"\n                      placeholder=\"Phone\"\n                      className=\"phone\"\n                      name=\"phone\"\n                      value={phone}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-element-group\">\n                    <label htmlFor=\"username\">Confirm Password</label>\n                    <FormInput\n                      type=\"password\"\n                      placeholder={\"Confirm Password\"}\n                      className=\"username\"\n                      name=\"c_password\"\n                      value={c_password}\n                      onChange={handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"left\">\n              <div className=\"form\">\n                <div className=\"form-element-group\">\n                  <div className=\"form-element-group\">\n                    <FormInput\n                      type=\"submit\"\n                      className=\"submit-btn\"\n                      name=\"submit-btn\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SignUp;\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/user-profile/UserProfile.component.js",["345","346"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/cart-product-card/CartProductCard.component.js",["347"],"import React from \"react\";\nimport \"./cartProductCard.styles.scss\";\nimport Img from \"../../assets/images/04.png\";\n\nexport default function CartProductCard({ product }) {\n  return (\n    <div className=\"cart-product-card\">\n      <div className=\"inner-container\">\n        <div className=\"product-img\">\n          <img src={product.customized_image} alt=\"img\" />\n        </div>\n        <div className=\"product-details\">\n          <div className=\"product-name\">\n            <p className=\"primary-text\">{product && product.product_name}</p>\n            <p className=\"variation\">{product && product.color_name}</p>\n          </div>\n          <div className=\"price\">${product && product.price}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/productCustomization/ProductCustomization.js",["348","349","350","351"],"import React, { useState, useEffect } from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport \"./productCustomization.scss\";\nimport { Modal } from \"react-responsive-modal\";\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\nimport { AiOutlineShareAlt } from \"react-icons/ai\";\nimport ImagesCustomization from \"./ImagesCustomization\";\nimport mergeImages from \"merge-images\";\n\n// react share package\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  PinterestShareButton,\n  PinterestIcon,\n  TwitterShareButton,\n  TwitterIcon,\n} from \"react-share\";\n\nexport default function ProductCustomization({\n  open,\n  close,\n  currentVariant,\n  saveFinalCustomisation,\n  saveFinalImage,\n}) {\n  const [style, setStyle] = useState({});\n\n  useEffect(() => {\n    currentVariant && getImgSize();\n\n    setTimeout(() => {\n      currentVariant && getImgSize();\n      saveFinalCustomisation(currentCustom);\n      currentVariant &&\n        setCurrentCustom({\n          neck_style: currentVariant ? currentVariant.default_design[0] : null,\n          sleeve_style: currentVariant\n            ? currentVariant.default_design[1]\n            : null,\n          bottom_style: currentVariant\n            ? currentVariant.default_design[2]\n            : null,\n        });\n    }, 500);\n  }, [open]);\n\n  const [currentCustom, setCurrentCustom] = useState();\n\n  const changeImage = (data) => {\n    getImgSize();\n    if (data.type === \"neck_style\") {\n      setCurrentCustom({ ...currentCustom, neck_style: data });\n    } else if (data.type === \"bottom_style\") {\n      setCurrentCustom({ ...currentCustom, bottom_style: data });\n    } else {\n      setCurrentCustom({\n        ...currentCustom,\n        sleeve_style: data,\n      });\n    }\n  };\n\n  const getImgSize = () => {\n    var style = {};\n\n    var neck_design = new Image();\n    neck_design.src = currentVariant.neck_style[0].neck_design;\n\n    style.topWidth = neck_design.width;\n    style.topHeight = neck_design.height;\n\n    var lhand_design = new Image();\n    lhand_design.src = currentVariant.sleeve_style[0].lhand_design;\n    style.leftWidth = lhand_design.width;\n\n    var rhand_design = new Image();\n    rhand_design.src = currentVariant.sleeve_style[0].rhand_design;\n    style.rightWidth = rhand_design.width;\n\n    var bottom_design = new Image();\n    bottom_design.src = currentVariant.bottom_style[0].bottom_design;\n    style.bottomWidth = bottom_design.width;\n    style.bottomHeight = bottom_design.height;\n\n    setStyle(style);\n    return style;\n  };\n\n  const onCloseModal = () => {\n    close();\n  };\n\n  const left = (e) => {\n    sideScroll(\n      e.target.parentElement.parentElement.lastChild,\n      \"left\",\n      25,\n      55,\n      10\n    );\n  };\n  const right = (e) => {\n    sideScroll(\n      e.target.parentElement.parentElement.lastChild,\n      \"right\",\n      25,\n      55,\n      10\n    );\n  };\n\n  const sideScroll = (element, direction, speed, distance, step) => {\n    let scrollAmount = 0;\n    var slideTimer = setInterval(function () {\n      if (direction == \"left\") {\n        element.scrollLeft -= step;\n      } else {\n        element.scrollLeft += step;\n      }\n      scrollAmount += step;\n      if (scrollAmount >= distance) {\n        window.clearInterval(slideTimer);\n      }\n    }, speed);\n  };\n\n  const onSave = () => {\n    saveFinalCustomisation(currentCustom);\n    compressImage();\n    onCloseModal();\n  };\n\n  const compressImage = () => {\n    mergeImages(\n      [\n        {\n          src:\n            currentCustom &&\n            currentCustom.neck_style &&\n            currentCustom.neck_style.neck_design,\n          x: style.leftWidth,\n          y: 0,\n        },\n        {\n          src:\n            currentCustom &&\n            currentCustom.sleeve_style &&\n            currentCustom.sleeve_style.lhand_design,\n          x: 0,\n          y: 0,\n        },\n        {\n          src:\n            currentCustom &&\n            currentCustom.sleeve_style &&\n            currentCustom.sleeve_style.rhand_design,\n          x: style.leftWidth + style.topWidth,\n          y: 0,\n        },\n        {\n          src:\n            currentCustom &&\n            currentCustom.bottom_style &&\n            currentCustom.bottom_style.bottom_design,\n          x: 0,\n          y: style.topHeight,\n        },\n      ],\n      {\n        width: style.leftWidth + style.topWidth + style.rightWidth,\n        height: style.topHeight + style.bottomHeight,\n        crossOrigin: true,\n      }\n    ).then((b64) => {\n      saveFinalImage(b64);\n    });\n  };\n\n  return (\n    <div>\n      <Modal\n        classNames={{\n          modal: \"customization-modal p-0\",\n        }}\n        open={open}\n        onClose={onCloseModal}\n        center\n      >\n        <div className=\"main-customization-wrapper\">\n          <div className=\"product-customization-container\">\n            <ImagesCustomization\n              currentCustom={currentCustom}\n              style={style}\n            ></ImagesCustomization>\n            <div className=\"details-wrapper\">\n              <h5 className=\"product-title\">\n                Customize your style with eShakti FX\n              </h5>\n              <p className=\"text-lead\">\n                Click on any box and see the style change!\n              </p>\n\n              <div className=\"attribute-wrapper\">\n                <div className=\"attribute-header\">NECKLINE</div>\n                <div className=\"attribute-container\">\n                  <div className=\"default-attribute\">\n                    <div className=\"text-lead\">As Shown</div>\n                    {currentVariant &&\n                    currentVariant.default_design &&\n                    currentVariant.default_design.length > 0 &&\n                    currentCustom &&\n                    currentCustom.neck_style &&\n                    currentCustom.neck_style.id ===\n                      currentVariant.default_design[0].id ? (\n                      <div className=\"default-image selected-image\">\n                        <div className=\"text-lead\">Default</div>\n                      </div>\n                    ) : (\n                      <div\n                        className=\"default-image\"\n                        onClick={changeImage.bind(\n                          this,\n                          currentVariant && currentVariant.default_design[0]\n                        )}\n                      >\n                        <div className=\"text-lead\">Default</div>\n                      </div>\n                    )}\n                    <p className=\"text-lead\">\n                      {currentVariant &&\n                        currentVariant.default_design[0].design_name}\n                    </p>\n                  </div>\n                  <div className=\"customize-slider-container\">\n                    <div className=\"text-lead\">Click to change Neckline</div>\n                    <div className=\"images-slider\">\n                      {currentVariant &&\n                        currentVariant.neck_style.map(\n                          (image, key) =>\n                            image.id !== \"0\" && (\n                              <div\n                                key={key}\n                                className=\"image\"\n                                onClick={changeImage.bind(this, image)}\n                              >\n                                {currentCustom &&\n                                currentCustom.neck_style &&\n                                currentCustom.neck_style.id === image.id ? (\n                                  <img\n                                    className=\"selected-image\"\n                                    src={image.design_icon}\n                                    alt=\"\"\n                                  />\n                                ) : (\n                                  <img src={image.design_icon} alt=\"\" />\n                                )}\n                                <p className=\"text-lead\">{image.design_name}</p>\n                              </div>\n                            )\n                        )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"attribute-wrapper\">\n                <div className=\"attribute-header\">SLEEVE TYPE</div>\n                <div className=\"attribute-container\">\n                  <div className=\"default-attribute\">\n                    <div className=\"text-lead\">As Shown</div>\n                    {currentVariant &&\n                    currentVariant.default_design &&\n                    currentVariant.default_design.length > 0 &&\n                    currentCustom &&\n                    currentCustom.sleeve_style &&\n                    currentCustom.sleeve_style.id ==\n                      currentVariant.default_design[1].id ? (\n                      <div className=\"default-image selected-image\">\n                        <div className=\"text-lead\">Default</div>\n                      </div>\n                    ) : (\n                      <div\n                        className=\"default-image\"\n                        onClick={changeImage.bind(\n                          this,\n                          currentVariant && currentVariant.default_design[1]\n                        )}\n                      >\n                        <div className=\"text-lead\">Default</div>\n                      </div>\n                    )}\n                    <p className=\"text-lead\">\n                      {currentVariant &&\n                        currentVariant.default_design[1].design_name}\n                    </p>\n                  </div>\n                  <div className=\"customize-slider-container\">\n                    <div className=\"text-lead\">Click to change Sleeve Type</div>\n                    <div className=\"left-button\" onClick={left}>\n                      <BsChevronLeft />\n                    </div>\n                    <div className=\"right-button\" onClick={right}>\n                      <BsChevronRight />\n                    </div>\n                    <div className=\"images-slider\">\n                      {currentVariant &&\n                        currentVariant.sleeve_style.map(\n                          (image, key) =>\n                            image.id !== \"0\" && (\n                              <div\n                                key={key}\n                                className=\"image\"\n                                onClick={changeImage.bind(this, image)}\n                              >\n                                {currentCustom &&\n                                currentCustom.sleeve_style &&\n                                currentCustom.sleeve_style.id === image.id ? (\n                                  <img\n                                    className=\"selected-image\"\n                                    src={image.design_icon}\n                                    alt=\"\"\n                                  />\n                                ) : (\n                                  <img src={image.design_icon} alt=\"\" />\n                                )}\n\n                                <p className=\"text-lead\">{image.design_name}</p>\n                              </div>\n                            )\n                        )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"attribute-wrapper\">\n                <div className=\"attribute-header\">LENGTH</div>\n                <div className=\"attribute-container\">\n                  <div className=\"default-attribute\">\n                    <div className=\"text-lead\">As Shown</div>\n                    {currentVariant &&\n                    currentVariant.default_design &&\n                    currentVariant.default_design.length > 0 &&\n                    currentCustom &&\n                    currentCustom.bottom_style &&\n                    currentCustom.bottom_style.id ==\n                      currentVariant.default_design[2].id ? (\n                      <div className=\"default-image selected-image\">\n                        <div className=\"text-lead\">Default</div>\n                      </div>\n                    ) : (\n                      <div\n                        className=\"default-image\"\n                        onClick={changeImage.bind(\n                          this,\n                          currentVariant && currentVariant.default_design[2]\n                        )}\n                      >\n                        <div className=\"text-lead\">Default</div>\n                      </div>\n                    )}\n                    <p className=\"text-lead\">\n                      {currentVariant &&\n                        currentVariant.default_design[2].design_name}\n                    </p>\n                  </div>\n                  <div className=\"customize-slider-container\">\n                    <div className=\"text-lead\">Click to change Sleeve Type</div>\n                    <div className=\"left-button\" onClick={left}>\n                      <BsChevronLeft />\n                    </div>\n                    <div className=\"right-button\" onClick={right}>\n                      <BsChevronRight />\n                    </div>\n                    <div className=\"images-slider\">\n                      {currentVariant &&\n                        currentVariant.bottom_style.map(\n                          (image, key) =>\n                            image.id !== \"0\" && (\n                              <div\n                                key={key}\n                                className=\"image\"\n                                onClick={changeImage.bind(this, image)}\n                              >\n                                {currentCustom &&\n                                currentCustom.bottom_style &&\n                                currentCustom.bottom_style.id === image.id ? (\n                                  <img\n                                    className=\"selected-image\"\n                                    src={image.design_icon}\n                                    alt=\"\"\n                                  />\n                                ) : (\n                                  <img src={image.design_icon} alt=\"\" />\n                                )}\n                                <p className=\"text-lead\">{image.design_name}</p>\n                              </div>\n                            )\n                        )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"other-option-wrapper\">\n                <div className=\"other-option-header\">OTHER OPTIONS (FREE)</div>\n                <div className=\"checkbox-group\">\n                  <label>\n                    <input type=\"checkbox\" value=\"\" />\n                    Remove Pocket\n                  </label>\n                </div>\n                <div className=\"checkbox-group\">\n                  <label>\n                    <input type=\"checkbox\" value=\"\" />\n                    Remove Embroidery / Embellishment\n                  </label>\n                </div>\n                <div className=\"checkbox-group\">\n                  <label>\n                    <input type=\"checkbox\" value=\"\" />\n                    Add Side Zip\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"customization-footer\">\n            <div className=\"left-footer\">\n              <p className=\"text-lead\">\n                Selected style options -{\" \"}\n                {currentCustom &&\n                  currentCustom.neck_style &&\n                  currentCustom.neck_style.design_name}\n                ,{\" \"}\n                {currentCustom &&\n                  currentCustom.sleeve_style &&\n                  currentCustom.sleeve_style.design_name}\n                ,{\" \"}\n                {currentCustom &&\n                  currentCustom.bottom_style &&\n                  currentCustom.bottom_style.design_name}\n              </p>\n              <div className=\"share\">\n                <AiOutlineShareAlt /> <span> Share</span>\n                <div className=\"social-icons\">\n                  <TwitterShareButton\n                    url={`http://eshakti.ewtlive.in/product-details/${2}`}\n                    title={\"product name\"}\n                    className=\"Demo__some-network__share-button\"\n                  >\n                    <TwitterIcon size={28} round />\n                  </TwitterShareButton>\n                  <FacebookShareButton\n                    url={`http://eshakti.ewtlive.in/product-details/${2}`}\n                    title={\"product name\"}\n                    className=\"Demo__some-network__share-button\"\n                  >\n                    <FacebookIcon size={28} round />\n                  </FacebookShareButton>\n\n                  <PinterestShareButton\n                    url={`http://eshakti.ewtlive.in/product-details/${2}`}\n                    title={\"product name\"}\n                    className=\"Demo__some-network__share-button\"\n                  >\n                    <PinterestIcon size={28} round />\n                  </PinterestShareButton>\n                </div>\n              </div>\n            </div>\n            <div className=\"right-footer\">\n              <div className=\"btn save-style\">Save Style</div>\n              <div className=\"btn process-style\" onClick={onSave}>\n                Select style & proceed\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n",["352","353"],"/home/jitender/Desktop/react-eshakti/eshakti/src/store/rootReducer.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/customer-review-card/CustomerReviewCard.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/context/context.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/navBar/Navbar.component.js",["354"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/productDetails/ProductDetails.js",["355","356"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/media-speaks-page/MediaSpeaks.component.js",["357","358"],"import React, { useEffect } from \"react\";\nimport NewsCard from \"../news-card/NewsCard.component\";\nimport \"./media-speaks.styles.scss\";\n\n// actions\nimport { getPages } from \"./../../store/home/homeAction\";\n\n// react redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// html parser\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport default function MediaSpeaks() {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.home.staticPages);\n\n  function fetchData() {\n    dispatch(getPages());\n  }\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchData();\n  }, []);\n\n  let filtered, mediaSpeaks;\n\n  // checking if privacy policy data exist in state\n  if (state !== undefined) {\n    // filter data with the name of partner\n    filtered = state.filter(\n      (each) => each.page_group.toLowerCase() === \"about\"\n    );\n\n    // find ou data for affilate program page\n    mediaSpeaks = filtered[0].page.filter(\n      (each) => each.page_name === \"Media Speak\"\n    );\n    mediaSpeaks = mediaSpeaks[0].contents;\n  }\n\n  // if affilate page content exist return this html\n  if (mediaSpeaks) {\n    return ReactHtmlParser(mediaSpeaks);\n  }\n\n  return (\n    <div className=\"media-speaks\">\n      <div className=\"loading\">\n        <div className=\"spinner\"></div>\n      </div>\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/how-to-measure-page/HowToMeasure.component.js",["359"],"/home/jitender/Desktop/react-eshakti/eshakti/src/axios/axios.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/productListing/ProductListing.component.js",["360","361","362"],"/home/jitender/Desktop/react-eshakti/eshakti/src/hooks/useWindowSize.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/productTabList/ProductTabList.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/defaultFilter/DefaultFilter.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/category-page/CategoryPage.component.js",["363"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getProductByCategory,\n  getfiltersData,\n} from \"../../store/home/homeAction\";\n\nimport \"./categoryPage.styles.scss\";\n\n// react router\nimport { useParams } from \"react-router-dom\";\n\n// local icons\nimport icon1 from \"../../assets/icons/01.png\";\nimport icon2 from \"../../assets/icons/02.png\";\n\n// react icons\nimport { FiChevronDown } from \"react-icons/fi\";\n\nimport ProductCard from \"../productCard/ProductCard.component\";\nimport BrandFilter from \"../brand-filter/BrandFilter.component\";\nimport PriceFilter from \"../priceFilter/PriceFilter.component\";\nimport SizeFilter from \"../sizeFilter/SizeFilter.component\";\nimport ColorFilter from \"../colorFilter/ColorFilter.component\";\nimport DefaultFilter from \"../defaultFilter/DefaultFilter.component\";\n\n// importing axios\nexport default function CategoryPage() {\n  const [gridView, setGridView] = useState(\"grid-view-three\");\n  const dispatch = useDispatch();\n  const products = useSelector((state) => state.home.productByCategory);\n  const [showFilter, setShowFilter] = useState(\"\");\n\n  const categoryFilters = useSelector((state) => state.home.categoryFilters);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(getProductByCategory(id));\n    dispatch(getfiltersData(id));\n    localStorage.setItem(\"es_product_category_id\", id);\n  }, [id]);\n\n  console.log(\n    useSelector((state) => state),\n    \"data state\"\n  );\n\n  return (\n    <div className=\"category-page\">\n      {products && products.length > 0 ? (\n        <div className=\"inner-container\">\n          <div className={`filters-area ${showFilter}`}>\n            {categoryFilters &&\n              categoryFilters.map((eachfilter, index) => {\n                switch (eachfilter.name.toLowerCase()) {\n                  case \"brand\":\n                    return <BrandFilter key={index} filterData={eachfilter} />;\n\n                  case \"size\":\n                    return <SizeFilter key={index} filterData={eachfilter} />;\n\n                  case \"price\":\n                    return <PriceFilter key={index} filterData={eachfilter} />;\n\n                  case \"color\":\n                    return <ColorFilter key={index} filterData={eachfilter} />;\n\n                  default:\n                    return (\n                      <DefaultFilter key={index} filterData={eachfilter} />\n                    );\n                }\n              })}\n          </div>\n          <div className=\"product-listing\">\n            <div className=\"details-and-view-options\">\n              <div\n                className=\"filter-badge\"\n                onClick={() =>\n                  setShowFilter(showFilter === \"show\" ? \"\" : \"show\")\n                }\n              >\n                <span className=\"text\">Filters</span>\n                <span className=\"icon\">\n                  <FiChevronDown />\n                </span>\n              </div>\n              <div className=\"number-of-results\">\n                Showing 1-12 of 99 Results\n              </div>\n\n              <div className=\"right-actions\">\n                <div className=\"dropdown\">\n                  <select>\n                    <option value=\"\">Default Sorting</option>\n                    <option value=\"\">Low to Height</option>\n                    <option value=\"\">Heigh to Low</option>\n                  </select>\n                </div>\n                <div className=\"views-icons\">\n                  <img\n                    src={icon1}\n                    onClick={() => setGridView(\"grid-view-two\")}\n                    alt=\"img\"\n                  />\n                  <img\n                    src={icon2}\n                    onClick={() => setGridView(\"grid-view-three\")}\n                    alt=\"img\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"number-of-results-small\">\n              Showing 1-12 of 99 Results\n            </div>\n            {/* \n            {products && products.length > 0\n              ? console.log(products, \"data derees\")\n              : null} */}\n            {console.log(products, \"products\")}\n\n            <div className={`products ${gridView}`}>\n              {products && products.length > 0\n                ? products.map((product, key) => (\n                    <ProductCard key={key} product={product} />\n                  ))\n                : \"\"}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"no-data\">\n          <h3>No Products</h3>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/jitender/Desktop/react-eshakti/eshakti/src/components/colorFilter/ColorFilter.component.js",[],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/size-chart-popup/SizeChartPopup.component.js",["364"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/productCustomization/ImagesCustomization.js",["365","366","367","368"],"/home/jitender/Desktop/react-eshakti/eshakti/src/components/manage-address/ManageAddress.component.js",["369","370"],{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","severity":1,"message":"376","line":7,"column":3,"nodeType":"377","messageId":"378","endLine":7,"endColumn":11},{"ruleId":"375","severity":1,"message":"379","line":42,"column":10,"nodeType":"377","messageId":"378","endLine":42,"endColumn":24},{"ruleId":"375","severity":1,"message":"380","line":55,"column":9,"nodeType":"377","messageId":"378","endLine":55,"endColumn":14},{"ruleId":"381","severity":1,"message":"382","line":65,"column":6,"nodeType":"383","endLine":65,"endColumn":8,"suggestions":"384"},{"ruleId":"375","severity":1,"message":"385","line":1,"column":17,"nodeType":"377","messageId":"378","endLine":1,"endColumn":26},{"ruleId":"375","severity":1,"message":"386","line":4,"column":10,"nodeType":"377","messageId":"378","endLine":4,"endColumn":21},{"ruleId":"375","severity":1,"message":"387","line":5,"column":10,"nodeType":"377","messageId":"378","endLine":5,"endColumn":29},{"ruleId":"375","severity":1,"message":"388","line":8,"column":8,"nodeType":"377","messageId":"378","endLine":8,"endColumn":14},{"ruleId":"375","severity":1,"message":"389","line":9,"column":8,"nodeType":"377","messageId":"378","endLine":9,"endColumn":14},{"ruleId":"375","severity":1,"message":"390","line":15,"column":8,"nodeType":"377","messageId":"378","endLine":15,"endColumn":14},{"ruleId":"375","severity":1,"message":"391","line":16,"column":8,"nodeType":"377","messageId":"378","endLine":16,"endColumn":17},{"ruleId":"375","severity":1,"message":"392","line":7,"column":10,"nodeType":"377","messageId":"378","endLine":7,"endColumn":23},{"ruleId":"375","severity":1,"message":"393","line":11,"column":10,"nodeType":"377","messageId":"378","endLine":11,"endColumn":28},{"ruleId":"381","severity":1,"message":"394","line":27,"column":6,"nodeType":"383","endLine":27,"endColumn":8,"suggestions":"395"},{"ruleId":"381","severity":1,"message":"394","line":24,"column":6,"nodeType":"383","endLine":24,"endColumn":8,"suggestions":"396"},{"ruleId":"375","severity":1,"message":"393","line":4,"column":10,"nodeType":"377","messageId":"378","endLine":4,"endColumn":28},{"ruleId":"381","severity":1,"message":"394","line":26,"column":6,"nodeType":"383","endLine":26,"endColumn":8,"suggestions":"397"},{"ruleId":"375","severity":1,"message":"398","line":5,"column":10,"nodeType":"377","messageId":"378","endLine":5,"endColumn":22},{"ruleId":"375","severity":1,"message":"399","line":7,"column":10,"nodeType":"377","messageId":"378","endLine":7,"endColumn":14},{"ruleId":"381","severity":1,"message":"394","line":28,"column":6,"nodeType":"383","endLine":28,"endColumn":8,"suggestions":"400"},{"ruleId":"381","severity":1,"message":"382","line":21,"column":6,"nodeType":"383","endLine":21,"endColumn":8,"suggestions":"401"},{"ruleId":"371","replacedBy":"402"},{"ruleId":"373","replacedBy":"403"},{"ruleId":"375","severity":1,"message":"404","line":10,"column":27,"nodeType":"377","messageId":"378","endLine":10,"endColumn":47},{"ruleId":"375","severity":1,"message":"405","line":2,"column":27,"nodeType":"377","messageId":"378","endLine":2,"endColumn":33},{"ruleId":"375","severity":1,"message":"406","line":2,"column":42,"nodeType":"377","messageId":"378","endLine":2,"endColumn":48},{"ruleId":"375","severity":1,"message":"404","line":14,"column":27,"nodeType":"377","messageId":"378","endLine":14,"endColumn":47},{"ruleId":"375","severity":1,"message":"399","line":3,"column":10,"nodeType":"377","messageId":"378","endLine":3,"endColumn":14},{"ruleId":"371","replacedBy":"407"},{"ruleId":"373","replacedBy":"408"},{"ruleId":"375","severity":1,"message":"409","line":6,"column":3,"nodeType":"377","messageId":"378","endLine":6,"endColumn":13},{"ruleId":"375","severity":1,"message":"399","line":15,"column":10,"nodeType":"377","messageId":"378","endLine":15,"endColumn":14},{"ruleId":"375","severity":1,"message":"410","line":16,"column":8,"nodeType":"377","messageId":"378","endLine":16,"endColumn":23},{"ruleId":"375","severity":1,"message":"411","line":18,"column":8,"nodeType":"377","messageId":"378","endLine":18,"endColumn":25},{"ruleId":"375","severity":1,"message":"412","line":19,"column":10,"nodeType":"377","messageId":"378","endLine":19,"endColumn":24},{"ruleId":"375","severity":1,"message":"413","line":21,"column":10,"nodeType":"377","messageId":"378","endLine":21,"endColumn":24},{"ruleId":"375","severity":1,"message":"414","line":37,"column":17,"nodeType":"377","messageId":"378","endLine":37,"endColumn":25},{"ruleId":"375","severity":1,"message":"415","line":38,"column":27,"nodeType":"377","messageId":"378","endLine":38,"endColumn":45},{"ruleId":"375","severity":1,"message":"416","line":40,"column":24,"nodeType":"377","messageId":"378","endLine":40,"endColumn":39},{"ruleId":"375","severity":1,"message":"417","line":45,"column":20,"nodeType":"377","messageId":"378","endLine":45,"endColumn":31},{"ruleId":"381","severity":1,"message":"382","line":68,"column":6,"nodeType":"383","endLine":68,"endColumn":8,"suggestions":"418"},{"ruleId":"375","severity":1,"message":"419","line":70,"column":9,"nodeType":"377","messageId":"378","endLine":70,"endColumn":23},{"ruleId":"375","severity":1,"message":"420","line":103,"column":9,"nodeType":"377","messageId":"378","endLine":103,"endColumn":21},{"ruleId":"421","severity":1,"message":"422","line":120,"column":23,"nodeType":"423","messageId":"424","endLine":120,"endColumn":25},{"ruleId":"375","severity":1,"message":"425","line":179,"column":9,"nodeType":"377","messageId":"378","endLine":179,"endColumn":22},{"ruleId":"381","severity":1,"message":"426","line":16,"column":6,"nodeType":"383","endLine":16,"endColumn":8,"suggestions":"427"},{"ruleId":"375","severity":1,"message":"428","line":2,"column":23,"nodeType":"377","messageId":"378","endLine":2,"endColumn":34},{"ruleId":"371","replacedBy":"429"},{"ruleId":"373","replacedBy":"430"},{"ruleId":"375","severity":1,"message":"431","line":12,"column":8,"nodeType":"377","messageId":"378","endLine":12,"endColumn":14},{"ruleId":"375","severity":1,"message":"428","line":18,"column":23,"nodeType":"377","messageId":"378","endLine":18,"endColumn":34},{"ruleId":"375","severity":1,"message":"432","line":8,"column":5,"nodeType":"377","messageId":"378","endLine":8,"endColumn":17},{"ruleId":"375","severity":1,"message":"433","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":13},{"ruleId":"375","severity":1,"message":"434","line":26,"column":3,"nodeType":"377","messageId":"378","endLine":26,"endColumn":22},{"ruleId":"435","severity":1,"message":"436","line":7,"column":7,"nodeType":"437","messageId":"438","endLine":7,"endColumn":13},{"ruleId":"375","severity":1,"message":"439","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"375","severity":1,"message":"440","line":11,"column":10,"nodeType":"377","messageId":"378","endLine":11,"endColumn":23},{"ruleId":"441","severity":1,"message":"442","line":125,"column":13,"nodeType":"443","endLine":125,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":128,"column":13,"nodeType":"443","endLine":128,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":131,"column":13,"nodeType":"443","endLine":131,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":134,"column":13,"nodeType":"443","endLine":134,"endColumn":42},{"ruleId":"375","severity":1,"message":"409","line":6,"column":3,"nodeType":"377","messageId":"378","endLine":6,"endColumn":13},{"ruleId":"375","severity":1,"message":"411","line":18,"column":8,"nodeType":"377","messageId":"378","endLine":18,"endColumn":25},{"ruleId":"375","severity":1,"message":"415","line":27,"column":27,"nodeType":"377","messageId":"378","endLine":27,"endColumn":45},{"ruleId":"375","severity":1,"message":"416","line":29,"column":24,"nodeType":"377","messageId":"378","endLine":29,"endColumn":39},{"ruleId":"375","severity":1,"message":"417","line":34,"column":20,"nodeType":"377","messageId":"378","endLine":34,"endColumn":31},{"ruleId":"375","severity":1,"message":"444","line":48,"column":10,"nodeType":"377","messageId":"378","endLine":48,"endColumn":28},{"ruleId":"381","severity":1,"message":"382","line":70,"column":6,"nodeType":"383","endLine":70,"endColumn":8,"suggestions":"445"},{"ruleId":"375","severity":1,"message":"419","line":72,"column":9,"nodeType":"377","messageId":"378","endLine":72,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":122,"column":23,"nodeType":"423","messageId":"424","endLine":122,"endColumn":25},{"ruleId":"381","severity":1,"message":"394","line":24,"column":6,"nodeType":"383","endLine":24,"endColumn":8,"suggestions":"446"},{"ruleId":"375","severity":1,"message":"447","line":14,"column":8,"nodeType":"377","messageId":"378","endLine":14,"endColumn":26},{"ruleId":"381","severity":1,"message":"394","line":27,"column":6,"nodeType":"383","endLine":27,"endColumn":8,"suggestions":"448"},{"ruleId":"381","severity":1,"message":"382","line":22,"column":6,"nodeType":"383","endLine":22,"endColumn":8,"suggestions":"449"},{"ruleId":"450","severity":1,"message":"451","line":1,"column":1,"nodeType":"452","endLine":29,"endColumn":3},{"ruleId":"375","severity":1,"message":"428","line":18,"column":23,"nodeType":"377","messageId":"378","endLine":18,"endColumn":34},{"ruleId":"375","severity":1,"message":"428","line":2,"column":23,"nodeType":"377","messageId":"378","endLine":2,"endColumn":34},{"ruleId":"375","severity":1,"message":"399","line":8,"column":10,"nodeType":"377","messageId":"378","endLine":8,"endColumn":14},{"ruleId":"453","severity":1,"message":"454","line":32,"column":11,"nodeType":"377","messageId":"455","endLine":32,"endColumn":15},{"ruleId":"375","severity":1,"message":"456","line":7,"column":8,"nodeType":"377","messageId":"378","endLine":7,"endColumn":13},{"ruleId":"381","severity":1,"message":"457","line":57,"column":6,"nodeType":"383","endLine":57,"endColumn":8,"suggestions":"458"},{"ruleId":"375","severity":1,"message":"459","line":3,"column":8,"nodeType":"377","messageId":"378","endLine":3,"endColumn":11},{"ruleId":"381","severity":1,"message":"460","line":46,"column":6,"nodeType":"383","endLine":46,"endColumn":12,"suggestions":"461"},{"ruleId":"421","severity":1,"message":"422","line":116,"column":21,"nodeType":"423","messageId":"424","endLine":116,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":277,"column":51,"nodeType":"423","messageId":"424","endLine":277,"endColumn":53},{"ruleId":"421","severity":1,"message":"422","line":347,"column":51,"nodeType":"423","messageId":"424","endLine":347,"endColumn":53},{"ruleId":"371","replacedBy":"462"},{"ruleId":"373","replacedBy":"463"},{"ruleId":"381","severity":1,"message":"382","line":42,"column":6,"nodeType":"383","endLine":42,"endColumn":8,"suggestions":"464"},{"ruleId":"381","severity":1,"message":"465","line":67,"column":6,"nodeType":"383","endLine":67,"endColumn":21,"suggestions":"466"},{"ruleId":"381","severity":1,"message":"382","line":72,"column":6,"nodeType":"383","endLine":72,"endColumn":10,"suggestions":"467"},{"ruleId":"375","severity":1,"message":"468","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":16},{"ruleId":"381","severity":1,"message":"394","line":25,"column":6,"nodeType":"383","endLine":25,"endColumn":8,"suggestions":"469"},{"ruleId":"381","severity":1,"message":"394","line":24,"column":6,"nodeType":"383","endLine":24,"endColumn":8,"suggestions":"470"},{"ruleId":"375","severity":1,"message":"399","line":5,"column":10,"nodeType":"377","messageId":"378","endLine":5,"endColumn":14},{"ruleId":"375","severity":1,"message":"386","line":8,"column":10,"nodeType":"377","messageId":"378","endLine":8,"endColumn":21},{"ruleId":"375","severity":1,"message":"428","line":8,"column":23,"nodeType":"377","messageId":"378","endLine":8,"endColumn":34},{"ruleId":"381","severity":1,"message":"382","line":43,"column":6,"nodeType":"383","endLine":43,"endColumn":10,"suggestions":"471"},{"ruleId":"472","severity":1,"message":"473","line":31,"column":13,"nodeType":"443","endLine":31,"endColumn":72},{"ruleId":"375","severity":1,"message":"474","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":19},{"ruleId":"375","severity":1,"message":"475","line":9,"column":10,"nodeType":"377","messageId":"378","endLine":9,"endColumn":21},{"ruleId":"375","severity":1,"message":"476","line":10,"column":10,"nodeType":"377","messageId":"378","endLine":10,"endColumn":20},{"ruleId":"453","severity":1,"message":"477","line":27,"column":9,"nodeType":"377","messageId":"455","endLine":27,"endColumn":31},{"ruleId":"381","severity":1,"message":"426","line":13,"column":6,"nodeType":"383","endLine":13,"endColumn":8,"suggestions":"478"},{"ruleId":"375","severity":1,"message":"479","line":38,"column":11,"nodeType":"377","messageId":"378","endLine":38,"endColumn":21},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],"no-unused-vars","'getPages' is defined but never used.","Identifier","unusedVar","'SET_CATEGORIES' is defined but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["482"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'getHomePageProducts' is defined but never used.","'TopNav' is defined but never used.","'Navbar' is defined but never used.","'Footer' is defined but never used.","'BottomBar' is defined but never used.","'FaGreaterThan' is defined but never used.","'IoMdArrowDropright' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["483"],["484"],["485"],"'FiPlayCircle' is defined but never used.","'Link' is defined but never used.",["486"],["487"],["480"],["481"],"'AiOutlineCloseSquare' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.",["480"],["481"],"'removeCart' is defined but never used.","'CartProductCard' is defined but never used.","'SelectFormElement' is defined but never used.","'ToastContainer' is defined but never used.","'IoIosArrowBack' is defined but never used.","'setPhone' is assigned a value but never used.","'setAlternate_phone' is assigned a value but never used.","'setAddress_type' is assigned a value but never used.","'setLandmark' is assigned a value but never used.",["488"],"'updateQunitity' is assigned a value but never used.","'onPlaceOrder' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectCharges' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["489"],"'useSelector' is defined but never used.",["480"],["481"],"'Scroll' is defined but never used.","'initialState' is assigned a value but never used.","'axios' is defined but never used.","'SET_B2B_FORM_STATUS' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Styles' is defined but never used.","'IoLogoCodepen' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'billingshipping_id' is assigned a value but never used.",["490"],["491"],"'CustomerReviewCard' is defined but never used.",["492"],["493"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-redeclare","'text' is already defined.","redeclared","'Axios' is defined but never used.","React Hook useEffect has a missing dependency: 'getupdatedUserDetails'. Either include it or remove the dependency array.",["494"],"'Img' is defined but never used.","React Hook useEffect has missing dependencies: 'currentCustom', 'currentVariant', 'getImgSize', and 'saveFinalCustomisation'. Either include them or remove the dependency array. If 'saveFinalCustomisation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["495"],["480"],["481"],["496"],"React Hook useEffect has missing dependencies: 'currentVariant' and 'variant'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentCustom' needs the current value of 'currentVariant'.",["497"],["498"],"'NewsCard' is defined but never used.",["499"],["500"],["501"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'mergeImages' is defined but never used.","'totalHeight' is assigned a value but never used.","'totalWidth' is assigned a value but never used.","'reduceWidthPerchantage' is already defined.",["502"],"'updateData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"505","fix":"507"},{"desc":"505","fix":"508"},{"desc":"505","fix":"509"},{"desc":"503","fix":"510"},{"desc":"503","fix":"511"},{"desc":"512","fix":"513"},{"desc":"503","fix":"514"},{"desc":"505","fix":"515"},{"desc":"505","fix":"516"},{"desc":"503","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"503","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"505","fix":"527"},{"desc":"505","fix":"528"},{"desc":"525","fix":"529"},{"desc":"512","fix":"530"},"Update the dependencies array to be: [dispatch]",{"range":"531","text":"532"},"Update the dependencies array to be: [fetchData]",{"range":"533","text":"534"},{"range":"535","text":"534"},{"range":"536","text":"534"},{"range":"537","text":"534"},{"range":"538","text":"532"},{"range":"539","text":"532"},"Update the dependencies array to be: [dispatch, userId]",{"range":"540","text":"541"},{"range":"542","text":"532"},{"range":"543","text":"534"},{"range":"544","text":"534"},{"range":"545","text":"532"},"Update the dependencies array to be: [getupdatedUserDetails]",{"range":"546","text":"547"},"Update the dependencies array to be: [currentCustom, currentVariant, getImgSize, open, saveFinalCustomisation]",{"range":"548","text":"549"},{"range":"550","text":"532"},"Update the dependencies array to be: [currentVariant, productDetail, variant]",{"range":"551","text":"552"},"Update the dependencies array to be: [dispatch, id]",{"range":"553","text":"554"},{"range":"555","text":"534"},{"range":"556","text":"534"},{"range":"557","text":"554"},{"range":"558","text":"541"},[2777,2779],"[dispatch]",[641,643],"[fetchData]",[562,564],[620,622],[674,676],[591,593],[2104,2106],[497,499],"[dispatch, userId]",[2654,2656],[553,555],[656,658],[605,607],[1590,1592],"[getupdatedUserDetails]",[1278,1284],"[currentCustom, currentVariant, getImgSize, open, saveFinalCustomisation]",[1195,1197],[2508,2523],"[currentVariant, productDetail, variant]",[2613,2617],"[dispatch, id]",[607,609],[554,556],[1437,1441],[372,374]]